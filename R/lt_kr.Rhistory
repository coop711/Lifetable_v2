ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993))
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour="Graunt.or.US_1993"))
str(graunt.melt)
graunt.melt<-melt(graunt.df, id.vars = "x", variable.name = "Graunt.or.US_1993", value.name = "lx")
str(graunt.melt)
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour="Graunt.or.US_1993"))
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993))
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993))
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993), type=16)
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993), type=21)
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993), shape=21)
ggplot(graunt.melt, aes(x=x, y=lx)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993), shape=16)
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graun.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993))
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993))
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw()
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_area(colour=NA)
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_area(colour=Graunt.or.US_1993)
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_area(colour=NA, alpha=2)
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_area(colour=NA, alpha=0.5)
?geom_polygon
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_polygon()
?geom_polygon
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_polygon(aes(x=c(x[1:9], rev(x[10:18])), y=c(lx[1:9], rev(lx[10:18]))))
graunt.melt$lx
graunt.melt$lx[18]
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_polygon(aes(x=c(x[1:9], x[9], rev(x[10:18])), y=c(lx[1:9], lx[18], rev(lx[10:18]))))
geom_polygon(aes(x=c(x[1:9], x[9], rev(x[10:17])), y=c(lx[1:9], lx[18], rev(lx[10:17]))))
ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993)) +
geom_point(aes(colour=Graunt.or.US_1993)) +
theme_bw() +
geom_polygon(aes(x=c(x[1:9], x[9], rev(x[10:17])), y=c(lx[1:9], lx[18], rev(lx[10:17]))))
x[c(9, 18)]
graunt.melt$x[c(9, 18)]
graunt.melt$lxx[c(9, 18)]
graunt.melt$lx[c(9, 18)]
g1.graunt <- ggplot(graunt.melt, aes(x=x, y=lx, shape=Graunt.or.US_1993)) + geom_line(aes(colour=Graunt.or.US_1993))
g2.graunt <- g1.graunt + geom_point(aes(colour=Graunt.or.US_1993)) + theme_bw()
g2.graunt
g2.graunt + geom_polygon(aes(x=c(x[c(1:9, 18:10)]), y=c(lx[c(1:9, 18:10)])))
geom_polygon(aes(x=c(1:4, 4:1), y=c(rep(0, 4), rep(2, 4))))
?geom_polygon
ids <- factor(c("1.1", "2.1", "1.2", "2.2", "1.3", "2.3"))
values <- data.frame(
id = ids,
value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5)
)
positions <- data.frame(
id = rep(ids, each = 4),
x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,
0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),
y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,
2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2)
)
datapoly <- merge(values, positions, by=c("id"))
(p <- ggplot(datapoly, aes(x=x, y=y)) + geom_polygon(aes(fill=value, group=id)))
values
positions
datapoly
ggplot(datapoly[1:4,], aes(x=x, y=y)) +geom_point()
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(density=value))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(density=10))
?geom_polygon
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(linetype=2))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=2))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=1))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=5))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value))
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value)) + scale_fill_brewer(palette="Set1")
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value)) + discrete_fill_brewer(palette="Set1")
?scale_fill_brewer
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value)) + scale_fill_distller(palette="Set1")
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value)) + scale_fill_distiller(palette="Set1")
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value)) + scale_fill_distiller(palette="Set1") + theme_bw()
ggplot(datapoly[1:4,], aes(x=x, y=y)) + geom_polygon(aes(fill=value)) + scale_fill_distiller(palette=2) + theme_bw()
poly.data <-data.frame(x=c(1, 2, 2, 1), y=c(0, 0, 1, 1))
ggplot(poly.data, aes(x=x, y=y)) + geom_polygon(fill=3) + scale_fill_distiller(palette=2) + theme_bw()
ggplot(poly.data, aes(x=x, y=y)) + geom_polygon(fill=1) + scale_fill_distiller(palette=2) + theme_bw()
ggplot(poly.data, aes(x=x, y=y)) + geom_polygon(fill=2) + scale_fill_distiller(palette=2) + theme_bw()
graunt.melt
data.poly<-data.frame(x=graunt.melt$x[c(1:9,18:10)], y=graunt/melt$lx[c(1:9, 18:10)])
data.poly<-data.frame(x=graunt.melt$x[c(1:9,18:10)], y=graunt.melt$lx[c(1:9, 18:10)])
data.poly
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(fill=2) + scale_fill_distiller(palette=2) + theme_bw()
?geom_polygon
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=2) + scale_fill_distiller(palette=2) + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=1) + scale_fill_distiller(palette=2) + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=1) + scale_colour_distiller(palette=2) + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=2) + scale_colour_distiller(palette=2) + theme_bw()
?scale_colour_distiller
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=2) + scale_colour_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=5) + scale_colour_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=NULL) + scale_colour_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(colour=1:5) + scale_colour_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(fill=NULL) + scale_fill_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(fill=NA) + scale_fill_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(fill=1) + scale_fill_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(fill=2) + scale_fill_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(fill=3) + scale_fill_distiller(palette="Set1") + theme_bw()
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(alpha=3) + scale_alpha_distiller(palette="Set1") + theme_bw()
?scale_alpha_discrete
ggplot(data.poly, aes(x=x, y=y)) + geom_polygon(alpha=3) + scale_alpha_discrete(palette="Set1") + theme_bw()
dat <- data.frame(xval = 1:4, yval = c(3, 5, 6, 9), group = c("A", "B", "A", "B"))
dat
ggplot(dat, aes(x=xval, y=yval))
ggplot(dat, aes(x=xval, y=yval)) + geom_point()
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape="*")
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=1)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=3)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line()
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=2)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=3)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=4)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=5)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=6)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=7)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=8)
ggplot(dat, aes(x=xval, y=yval)) + geom_point(shape=2, size=4) + geom_line(linetype=8, colour="red")
g1 <- ggplot(dat, aes(x=xval, y=yval))
g2 <- g1 + geom_point(shape=2, size=4)
(g2 <- g1 + geom_point(shape=2, size=4))
?"("
(g3 <- g2 + geom_line(linetype=2, colour="red"))
(g4 <- g3 + theme_bw())
(g5 <- g4 + xlab("Values of x") + ylab("Values of y"))
(g6 <- g5 + title("x vs y"))
(g6 <- g5 + title(main="x vs y"))
(g6 <- g5 + ggtitle("x vs y"))
(g7 <- g6 + theme(axis.title.x=elemen_text(colour="red", size=14))
)
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14))
)
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14)))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12)))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="Apple Neo SD Gothic", face="bold")))
plot.title=element_text(colour="red", size=20, family="AppleGothic", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="AppleGothic", face="bold")))
(g6 <- g5 + ggtitle("x 와 y의 관계"))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="AppleGothic", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="YJ CHMSOOT Bold", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="Time New Roman", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="Times New Roman", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14),
axis.text.x=element_text(colour="blue", size=12),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Apple SD Gothic Neo"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g8 <- g7 + xlab("x의 값") + ylab("y의 값"))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Apple SD Gothic Neo"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.text.y=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g8 <- g7 + xlab("x의 값") + ylab("y의 값"))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Apple SD Gothic Neo"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g8 <- g7 + xlab("x의 값") + ylab("y의 값"))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="HANBatang-LVT"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
library(extrafont)
font_import()
warnings()
fonts()
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="HANBatang-LVT"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="HCR Batang-LVT"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
loadfonts()
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="HCR Batang-LVT"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="HCR Batang LVT"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
warnings()
fonts()
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Gulim"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="SimSun"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="AppleMyungjo"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Apple SD Gothic Neo", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="AppleMyungjo"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="HCR Batang LVT", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="HCR Dotum LVT", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="MS Micho", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="MS Mincho", face="bold")))
warnings()
fonts()
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="MS Gothic", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="SimSun", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Batang", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Gill Sans MT", face="bold")))
(g7 <- g6 + theme(axis.title.x=element_text(colour="red", size=14, family="Impact"),
axis.text.x=element_text(colour="blue", size=12, family="Apple SD Gothic Neo"),
axis.title.y=element_text(colour="blue", size=14, family="Apple SD Gothic Neo"),
plot.title=element_text(colour="red", size=20, family="Meiryo", face="bold")))
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type = "b")
load("graunt_0908.rda")
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type = "b")
lines(lx.17th~x, data=graunt, type="b")
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type="l")
points(px[age %in% graunt$x]~age[age %in% graunt$x], data=halley)
lines(lx.17th~x, data=graunt, type="b")
axis(side=1, at=c(graunt$x, 85), labels=c(graunt$x, 85))
axis(side=2, at=graunt$lx.17th, labels=graunt$lx.17th, las=1)
abline(v=c(0, 76, 85), lty=2)
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type="l")
load("graunt_0908.rda")
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type="l")
points(px[age %in% graunt$x]~age[age %in% graunt$x], data=halley)
lines(lx.17th~x, data=graunt, type="b")
axis(side=1, at=c(graunt$x, 85), labels=c(graunt$x, 85))
axis(side=2, at=graunt$lx.17th, labels=graunt$lx.17th, las=1)
abline(v=c(0, 76, 85), lty=2)
text(x = c(16, 36), y=c(20, 50), label=c("Graunt", "Halley"))
title(main="Graunt와 Halley의 생존 곡선 비교", xlab="연령(세)", ylab="생존률(%)")
locator(1)
locator(1)
poly.1.x<-c(0:11, 6, 0)
poly.1.y<-c(halley$px[1:12], graunt$lx.17th[2:1])
polygon(poly.1.x, poly.1.y, angle=45, col="blue")
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type="l")
points(px[age %in% graunt$x]~age[age %in% graunt$x], data=halley)
lines(lx.17th~x, data=graunt, type="b")
axis(side=1, at=c(graunt$x, 85), labels=c(graunt$x, 85))
axis(side=2, at=graunt$lx.17th, labels=graunt$lx.17th, las=1)
abline(v=c(0, 76, 85), lty=2)
text(x = c(16, 36), y=c(20, 50), label=c("Graunt", "Halley"))
title(main="Graunt와 Halley의 생존 곡선 비교", xlab="연령(세)", ylab="생존률(%)")
polygon(poly.1.x, poly.1.y, angle=45)
polygon(poly.1.x, poly.1.y, angle=45, density=15)
polygon(poly.1.x, poly.1.y, angle=45, density=15,col="blue")
polygon(poly.1.x, poly.1.y, angle=45, density=15,col="blue")
poly.2.x <- c(graunt$x[3:9], rev(halley$x[11:85]))
poly.2.y <- c(graunt$lx.17th[3:9], rev(halley$px[11:85]))
poly.2.x <- c(graunt$x[3:9], rev(halley$age[11:85]))
polygon(poly.2.x, poly.2.y, angle=45, density=15)
locator(1)
options(family="Apple SD Gothic Neo")
title(main="Graunt와 Halley의 생존 곡선 비교", xlab="연령(세)", ylab="생존률(%)")
options(family="Apple SDGothic Neo")
plot(graunt$x, graunt$lx.17th, ann=F, xaxt="n", yaxt="n", type="b")
axis(side=1, at=graunt$x, labels=graunt$x)
axis(side=2, at=graunt$lx, labels=graunt$lx.17th)
abline(v=c(0, 76), lty=2)
lines(us.93$x, us.93$lx.93, type="b")
abline(h=70, lty=2)
axis(side=2, at=70, labels=70, las=1)
polygon(graunt.x, us.y, density=15, col="red", border=NA)
abline(v=graunt$x,lty=2)
title(main="Graunt와 1993년 미국의 생존 곡선", xlab="연령(세)", ylab="생존률(%)")
```
par(family="Apple SDGothic Neo")
title(main="Graunt와 1993년 미국의 생존 곡선", xlab="연령(세)", ylab="생존률(%)")
par(family="Apple SD Gothic Neo")
par(family="AppleGothic")
title(main="Graunt와 1993년 미국의 생존 곡선", xlab="연령(세)", ylab="생존률(%)")
library(extrafont)
warnings()
fonts()
par(family="HCR Dotum LVT")
title(main="Graunt와 1993년 미국의 생존 곡선", xlab="연령(세)", ylab="생존률(%)")
plot(graunt$x, graunt$lx.17th, ann=F, xaxt="n", yaxt="n", type="b")
warnings()
q("no")
getwd()
library(extrafont)
fonts()
par(family="HCR Dotum LVT")
plot(px ~ age, data = halley, ann = F, xaxt = "n", yaxt = "n", type="l")
load("graunt_0908.rda")
(graunt.x <- c(graunt$x, graunt$x[1]))
(graunt.y <- c(graunt$lx.17th, 0))
graunt.x<-c(graunt$x, rev(graunt$x))
graunt.y<-c(rep(0, length(graunt$x)), rev(graunt$lx.17th))
us.y <- c(graunt$lx, rev(us.93$lx.93))
plot(graunt$x, graunt$lx.17th, ann=F, xaxt="n", yaxt="n", type="b")
axis(side=1, at=graunt$x, labels=graunt$x)
axis(side=2, at=graunt$lx, labels=graunt$lx.17th)
abline(v=c(0, 76), lty=2)
lines(us.93$x, us.93$lx.93, type="b")
abline(h=70, lty=2)
axis(side=2, at=70, labels=70, las=1)
polygon(graunt.x, us.y, density=15, col="red", border=NA)
abline(v=graunt$x,lty=2)
title(main="Graunt와 1993년 미국의 생존 곡선", xlab="연령(세)", ylab="생존률(%)")
Sys.info()
str(Sys.info())
library(xlsx)
getwf()
getwd()
list.files()
read.xlsx("lifetable_kr.xlsx", 1, startRow=3)
read.xlsx("lifetable_kr.xlsx", 1, startRow=2)
read.xlsx("lifetable_kr.xlsx", 1, startRow=2, header=FALSE)
?read.xlsx
read.xlsx("lifetable_kr.xlsx", 1, startRow=3, header=FALSE)
length(1970:2013)
rep(1970:2013, each=3)
paste(rep(1970:2013, each=3), c("A", "M", "F"), sep=".")
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, header=FALSE)
str(lt.kr.70.13)
lt.kr.70.13 <- as.numeric(read.xlsx("lifetable_kr.xlsx", 1, startRow=3, header=FALSE))
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, colIndex=-1, header=FALSE))
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, colIndex=-1, header=FALSE)
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, colIndex=2:133, header=FALSE)
str(lt.kr.70.13)
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, colIndex=2:133, header=FALSE)
str(lt.kr.70.13)
lt.kr.70.13 <- as.numeric(read.xlsx("lifetable_kr.xlsx", 1, startRow=3, colIndex=2:133, header=FALSE))
read.clipboard



926259246592803928769272093049931179296693286933509320293514935749343093733937899365093944939979386194147941979406594342943899426194531945759445094712949279481595050952569515695366955639547495661958519577295938962799616096410966639651396827969569681097114972229708297375974319727497603976249745497810978149763798009979899780798190981499798498333982979814898464984149827998565985239840098659986449853498766987559865898863988669878598954989669890099038989959891299087990389894299145990949901099188991349905699221991769910599253992159915299284992829921999352993379927999400993899934899432994199937999462994779940499555994999944699555995179946799570995319948999575













---------------------------------------------------------------------233211313632704240101378933376246981445334040256371524335059265781604636073272691674236690---------------------------------------------
---------------------------------------------------------------------------------------279491744237292291811860338525304171978739748319222121741242332442232442711352492392345022372522554347291388172688748953407012826451174426302959753589446833161255633452313216356320468803373758110473043428458587492123649960285
---------------------------------------------------------------------------------------1265865091794413377714418681141107809194221507486372053215894925421495173801017323498188921108525520196641179626156212211243228483229711325230817252091482733405257101507334056268131583235432271421626635702291911813937895
---------------------------------------------------------------------------------------371615595531404317655923---------------------------------------
---------------------------------------------------------------------------------------------438519896326475323456845512025677188584929058281660732189422683835789458742735951054285733903120461001246581399210312469514416106414860150011083750671501312261603416730
---------------------------------------------------------------------------------------------8332861300892395147610184521467124151918191485576220915447392208152563522252021704281024818913593257888537522534882387326329433822314912024488
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, colIndex=2:133, header=FALSE)
str(lt.kr.70.13)
lt.kr.70.13 <- as.numeric(read.xlsx("lifetable_kr.xlsx", 1, startRow=3, header=FALSE))
lt.kr.70.13 <- as.numeric(read.xlsx("lifetable_kr.xlsx", 1, startRow=3, endRow=26, header=FALSE))
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, endRow=26, colIndex=2:133, header=FALSE)
str(lt.kr.70.13)
lt.kr.70.13 <- as.numeric(read.xlsx("lifetable_kr.xlsx", 1, startRow=3, endRow=26, header=FALSE))
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, endRow=26, colIndex=2:133, header=FALSE)
str(lt.kr.70.13)
lt.kr.70.13 <- read.xlsx("lifetable_kr.xlsx", 1, startRow=3, endRow=24, colIndex=1:133, header=FALSE)
str(lt.kr.70.13)
yr.gender <- paste(rep(1970:2013, each=3), c("A", "M", "F"), sep=".")
names(lt.kr.70.13) <- c("age", yr.gender)
str(lt.kr.70.13)
plot(1970.A~age, data=lt.kr.70.13)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$1970.A)
lt.kr.70.13[1:10,]
tail(lt.kr.70.13)
options(width=180)
lt.kr.70.13[1:10, ]
lt.kr.70.13[11:20, ]
lt.kr.70.13[21:24, ]
mode(lt.kr.70.13)
is.matrix(lt.kr.70.13)
is.data.frame(lt.kr.70.13)
type.of(lt.kr.70.13)
typeof(lt.kr.70.13)
typeof(lt.kr.70.13[,1])
typeof(lt.kr.70.13[,2])
typeof(lt.kr.70.13[,3])
sapply(lt.kr.70.13, typeof)
?any
all(sapply(lt.kr.70.13, typeof) == "double")
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$1970.M)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$2013.M)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$2012.M)
gender.yr <- paste(c("A", "M", "F"), rep(1970:2013, each=3), sep=".")
gender.yr
names(lt.kr.70.13) <- c("age", gender.yr)
str(lt.kr.70.13)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2012)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2012, type="b")
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1970, type="b")
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1980, type="b")
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1990, type="b")
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2000, type="b")
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2010, type="b")
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2013, type="b", ann=FALSE, xaxt="n", yaxt="n")
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2010, type="b", col=rainbow(6)[1])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2000, type="b", col=rainbow(6)[2])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2000, type="b", col=rainbow(6)[3])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1990, type="b", col=rainbow(6)[4])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1980, type="b", col=rainbow(6)[5])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1970, type="b", col=rainbow(6)[6])
axis(side=1, at=lt.kr.70.13$age, label=lt.kr.70.13$age)
axis(side=2, at=seq(0, 100000, by=250000), label=seq(0, 100, by=25))
axis(side=2, at=seq(0, 100000, by=25000), labels=seq(0, 100, by=25))
?legend
legend("bottomleft", inset=0.1, legend=paste(seq(1970, 2010, by=10), 2013), col=(rainbow(6)[6:3,1], "black"))
legend("bottomleft", inset=0.1, legend=paste(seq(1970, 2010, by=10), 2013), col=(rainbow(6))
)
legend("bottomleft", inset=0.1, legend=paste(c(seq(1970, 2010, by=10), 2013)), col=(rainbow(6))
)
legend("bottomleft", inset=0.1, legend=paste(c(seq(1970, 2010, by=10), 2013)), col=(rainbow(6)), lty=1)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2013, type="b", ann=FALSE, xaxt="n", yaxt="n")
?col
?colour
??colour
?grey.colours
??grey.colors
?gray.colors
?gray
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2013, type="b", ann=FALSE, xaxt="n", yaxt="n", col=gray(0:5/10)[1)
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2013, type="b", ann=FALSE, xaxt="n", yaxt="n", col=gray(0:5/10)[1])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2010, type="b", col=gray(0:5/10)[2])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2000, type="b", col=gray(0:5/10)[3])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1990, type="b", col=gray(0:5/10)[4])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1980, type="b", col=gray(0:5/10)[5])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1970, type="b", col=gray(0:5/10)[6])
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2013, type="b", ann=FALSE, xaxt="n", yaxt="n", col=gray(0:5/6)[1])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2010, type="b", col=gray(0:5/6)[2])
plot(x=lt.kr.70.13$age, y=lt.kr.70.13$M.2013, type="b", ann=FALSE, xaxt="n", yaxt="n", col=gray(0:5/6)[1])
lines(x=lt.kr.70.13$age, y=lt.kr.70.13$M.1970, type="b", col=gray(0:5/6)[6])
ls()
lifetable
lifetable.kr
ls()
y
x
save(file="lt_kr.rda", list=c("lt.kr.70.13", "gender.yr", "yr.gender"))
savehistory(file="lt_kr.Rhistory")
